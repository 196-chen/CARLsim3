===============================================================================
CARLsim Installation
===============================================================================

-------------------------------------------------------------------------------
A. Supported OS's
-------------------------------------------------------------------------------
CARLsim has been tested on the following platforms:
- Windows 7
- Ubuntu 12.04
- Ubuntu 12.10
- Ubuntu 13.04
- Ubuntu 13.10
- Ubuntu 14.04
- Arch Linux
- CentOS 6
- Mac OS X

-------------------------------------------------------------------------------
B. NVIDIA CUDA and GPU Device Requirements
-------------------------------------------------------------------------------
Software: NVIDIA CUDA drivers/toolkits/SDKs version 5.0 and up shold be
installed and configured correctly.

Hardware: An NVIDIA CUDA-capable GPU device with a compute capability of 2.0
or higher is required.

Future versions of CARLsim that allow users to run the CPU implementation of
CARLsim without installing CUDA are planned. To see the compute capability of
your device you can check http://en.wikipedia.org/wiki/CUDA. For CUDA
installation instructrions for your platform, please see
https://developer.nvidia.com/cuda-zone. After CUDA has been installed, you can
check the Driver/Toolkit version by running the command 'nvcc --version'. You
can check the compute capability of your GPU device by running the command
'deviceQuery' located in the installed CUDA samples. The following
instructions assume CUDA has been installed.

-------------------------------------------------------------------------------
C. Linux/Mac OS X Install Instructions
-------------------------------------------------------------------------------
Instructions for Linux installation assume you are using the Bash shell.

0) Install the GNU GCC compiler collection and GNU Make build environment
if it is not already present on the system.

1) Set installation specific environment-variables such as information about
GPU devices, CUDA Toolkit version, and the desired installation location. The
variables are described below:

required variables:
-------------------
CARLSIM_LIB_DIR: desired installation location of the CARLsim library
CUDA_INSTALL_PATH: location of CUDA installation
CARLSIM_CUDAVER: CUDA driver/toolkit version number (major only e.g. 6.5 is 6.0)
CUDA_MAJOR_NUM: Major number of CUDA GPU device
CUDA_MINOR_NUM: Minor number of CUDA GPU device

optional variables:
-------------------
CARLSIM_FASTMATH: fast-math optimization level (0-4). Default is 0 (off)
CARLSIM_CUOPTLEVEL: CUDA optimization level (0-4). Default is 0 (off)
CARLSIM_DEBUG: includes debugging info. 1=enabled, 0=disabled. Default is 0

The easiest way to set these environment variables is to set them in your
.bashrc file. The code snippet below shows the lines to be added to the end of
your .bashrc file.

\code
# set CARLsim variables
export CARLSIM_LIB_DIR=/opt/CARL/CARLsim
export CUDA_INSTALL_PATH=/usr/local/cuda
export CARLSIM_CUDAVER=6
export CUDA_MAJOR_NUM=3
export CUDA_MINOR_NUM=5
\endcode

To make sure these settings go into effect, you can either type:

'source ~/.bashrc'

or close the shell and open another one. To find the CUDA Toolkit version you
are using you can type:

'nvcc --version'

To fined the compute capability of yoru GPU device, you can run the
'deviceQuery' binary found in the installed CUDA samples.

2) Once the environment variables have been set, enter the unzipped directory and
run:

'make && sudo make install'

(sudo should only required if CARLSIM_LIB_DIR points to a location outside of
your home directory)

The CARLsim library should now be installed and ready to use. Please read the
user-guide for tips on getting started building spiking neural networks with
CARLsim.
-------------------------------------------------------------------------------
D. Windows Install Instructions
-------------------------------------------------------------------------------
On Windows platform, CARLsim 3 includes a solution file and project files for
each examples and regression suite. For more information, please see
Chapter 11: Regression Suite. The solution file was created by Visual
Studio (VS) 2012 with CUDA 5.5. If you happen to use the same version,
Build Solution in VS 2012 will generate all executables (.exe) and static
library (.lib) for you. Before buiding the solution or projects, please make
sure Configuration is set to x64 and Release for example executables and Debug
for regression suite. For higher version of VS, CARLsim.sln and *.vcxproj will
be automatically upgraded by VS. For higher version of CUDA toolkit, please
replace 5.5 with YOUR_CUDA_VERSION in every *.vcxproj file and add them back
to CARLsim.sln.

-------------------------------------------------------------------------------
E. MAKEFILE HELP AND MAINTENANCE
-------------------------------------------------------------------------------

For more information on the above, please refer to the Makefile.

You can automatically clean up all object files, executables, etc. by typing:

'make clean'

This will leave your results folders untouched.

To delete all object files, executables, and output files (not results),
you can type:

'make distclean'

A help message, can be displayed by typing:

'make help'
