===============================================================================
Release 3.0
===============================================================================

Legend:
	+ added element
	- removed element
	* changed element

2014-08-29     Michael Beyeler <mbeyeler@uci.edu>
	+ Added addCustomFrames function to InputStimulus.m utility.

2014-08-15     Ting-Shuo Chou <tingshuc@uci.edu>
	* Fixed cross-platform compatibility on gtest.

2014-08-14     Michael Beyeler <mbeyeler@uci.edu>
	+ Added recordMovie function to InputStimulus.m utility.

2014-08-13     Michael Beyeler <mbeyeler@uci.edu>
    + Added Grid3D and Point3D structs.
    + Added way to create neurons on a grid via CARLsim::createGroup and
      CARLsim::createSpikeGeneratorGroup.
    * Fixed interface errors on boundary checks and CARLsim states.
    * Fixed console output of connection setup.
    + Added CARLsim::getGroupId (from string)

2014-08-08     Michael Beyeler <mbeyeler@uci.edu>
	* Fixed broken COBA implementation in CPU mode.
	+ Added COBA tests for firing rate comparison of CPU/GPU mode.
	* Condensed CUBA test case.
	* Fixed assertion in CpuSNN::runNetwork to make sure that the function is
	  called only after CpuSNN::setupNetwork.
	+ Added CpuSNN interface getters such as getCurrent(), getConductanceAMPA(),
	  isSimulationWithCOBA(), etc.
	* Refactored CpuSNN::copyNeuronState, so that it implicitly calls
	  CpuSNN::copyConductances, which itself calls CpuSNN::copyConductanceAMPA,
	  etc.
	- Removed test COBA.synRiseTimeSettings.
	* Fixed STP scaling factor, STP_A.
	* Fixed and tested STP for delay=1ms in CUBA/COBA, CPU/GPU mode. Currently
	  STP is not support with delay>1ms, because STP buffer is broken.
	* Fixed CARLsim state of setSpikeGenerator.
	* Fixed calculation of standard deviation in class SpikeMonitor.
	* Fixed assertion statement in CpuSNN::copyFiringStateFromGPU.
	* Fixed initial value of recovery variable in CpuSNN::resetNeuron.

2014-08-06     Kristofor D. Carlson <kdcarlso@uci.edu>
	* Fixed broken CUBA implementation in GPU mode.
	+ Added CUBA tests for firing rate comparison of CPU/GPU mode.

2014-07-31     Michael Beyeler <mbeyeler@uci.edu>
	* Improved memory usage, execution time, and flexibility of SpikeMonitor
	  utility.
	+ Added setSpikeMonitor option to avoid the creation of .dat spike files.
	+ Added compatibility for SpikeMonitor modes COUNT and AER. COUNT is not
	  yet implemented.
	+ Added PersistentData mode.
	+ Added SpikeMonitor public methods such as getRecording*Time(), getMode(),
	  getNeuronNumSpikes(), and getNeuronMeanFiringRate().
	* Renamed existing SpikeMonitor public methods for consistency.
	* Fixed SpikeMonitor error message when totalTime==0. Fixed return
	  argument of getPercentage*. Fixed startRecording/stopRecording bug.
	- Removed setLogCycle.
	* Cleaned up runNetwork and added flag printRunSummary.
	+ Added error message type to debug.log.
	* Fixed CARLsim state of setSpikeGenerator.
	* Fixed missing spikes when runNetwork is called more than once per
	  simulation.

2014-06-02     Kristofor D. Carlson <kdcarlso@uci.edu>
    + Added support for CUDA 6.
    * Users can now add CUDA compute capability of GPU during installation.

2014-05-21     Ting-Shuo Chou <tingshuc@uci.edu>
	* Fixed windows compatibility bugs. Added project for util.lib. Changed
	  static allocation in updateSpikeMonitor to dynamic.

2014-05-12     Kristofor D. Carlson <kdcarlso@uci.edu>
    + Created SpikeMonitor class to return spike activity information to the
      user.
    - Removed and reorganized global variables associated with setSpikeMonitor.
    * Fixed memory leaks.
    + Added tests for setSpikeMonitor and SpikeMonitor.
    + Included SpikeMonitor files in carlsim makefile and testing makefile.	
    + Added spikeInfo example that demonstrates how to use the SpikeMonitor
      class.

2014-05-09     Ting-Shuo Chou <tingshuc@uci.edu>
	+ Added CARLsim states: CONFIG, SETUP, and EXECUTION. Certain API calls
	  are supported only in certain states.

2014-05-03     Michael Beyeler <mbeyeler@uci.edu>
	* Changed API writeNetwork to saveSimulation. This function can be called
	  at any time, specifying where to store the data and whether to include
	  synaptic info (weights, delays, etc.).
	  By default, saveSimulation is called in the destructor of CARLsim. This
	  will save general information about the simulation and the network setup,
	  but will not include all the nitty-gritty synapse details.
	+ Added setDefaultSaveOptions, which allows the user to change the default
	  location etc. of the saveSimulation file.
	* Changed Matlab script readNetwork to loadSimulation.
	* Fixed -nan bug in printSimSummary.

2014-05-01     Michael Beyeler <mbeyeler@uci.edu>
	+ Added structs RangeDelay and RangeWeights for simplified connect call.
	  Inhibitory weights should now have positive sign, as they are weight
	  magnitudes.

2014-04-23     Kristofor D. Carlson <kdcarlso@uci.edu>
	* Fixed interface error in setHomeBaseFiringRate.

2014-04-11     Michael Beyeler <mbeyeler@uci.edu>
	+ Added InputStimulus utility, including InputStimulus.m (a Matlab class
	  that lets you generate 2D visual stimuli, add noise to them, confine
	  them to an aperture, and store them in binary files) and a corresponding
	  C++ class that reads the binary files and converts them to raw char
	  arrays or mean firing rates of PoissonRate objects.

2014-04-10     Ting-Shuo Chou <tingshuc@uci.edu>
	+ Added setupNetwork().

2014-04-10     Michael Beyeler <mbeyeler@uci.edu>
	* fixed snn_gpu.cu compiler warnings for CUDA 3
	* fixed CARLSIM_TEST and CARLSIM_DEBUG Makefile options
	- removed unnecessary linker flags in Makefile
	+ added test case for user interface

2014-04-09     Ting-Shuo Chou <tingshuc@uci.edu>
	+ added enum updateInterval_t and updateWeightChangeInterval() for weight
	  update intervals

2014-04-08     Ting-Shuo Chou <tingshuc@uci.edu>
	+ Added setNeuromodulator(), setWeightUpdateParameter(), getNumNeurons(),
	  getNumPreSynapses(), getNumPostSynapses(), and getGroupNumNeurons()
	+ Added isSetDASTDP flag in setSTDP()
	* fixed initialization bug in CpuSNNInit() and updateConnectionMonitor()

2014-04-08     Michael Beyeler <mbeyeler@uci.edu>
	+ added carlsim_definitions.h and snn_definitions.h
	- removed config.h

2014-04-03     Kristofor D. Carlson <kdcarlso@uci.edu>
  * Fixed the tuneFiringRates example to work with the new CARLsim/pti
	  interface.
	* Cleaned up Makefile and carlsim.mk a bit.

2014-04-02     Michael Beyeler <mbeyeler@uci.edu>
	+ added logger mode SHOWTIME

2014-03-17     Kristofor D. Carlson <kdcarlso@uci.edu>
	* carlsim_tests.mk: reorganized this file to support the implementation
	  of CARLsim google tests in different source files instead of a single
	  large source file.
	+ gtest_custom_main.cpp: created this file as a custom implementation
	  of a google tests main function. This allows us to control the output
	  of google tests easier.
	+ CHANGELOG_2.3: Added this CHANGELOG file to keep track of changes as
	  we make them. We can then more easily write a CHANGELOG file when we
	  release the code.


2013-03-22     Michael Beyeler <mbeyeler@uci.edu>
	* examples: reorganized files such that all source files, video files, and
	  scripts of a specific example go in examples/. Fixed dynamic allocation.
