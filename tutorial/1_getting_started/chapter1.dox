/*!

After you downloaded the zip, what to do. Mention ECJ installation chapter. FYI, Google Test is installed
automatically (give path). If you want more info on testing, go to \ref ch11_regression_suite

\page ch1_getting_started Chapter 1: Getting Started

\tableofcontents

\section ch1s1_preinstallation 1.1 Pre-Installation
\author Kristofor D. Carlson

CARLsim currently requires the NVIDIA CUDA parallel computing platform to be installed
even if one does not plan to use the GPU implementation of CARLsim. Future versions of CARLsim
that allow users to run the CPU implementation of CARLsim without installing CUDA are planned.
CARLsim requires GPUs with a compute capability of 2.0 or higher. To see find the compute
capability of your device you can check <a href="http://en.wikipedia.org/wiki/CUDA">here</a>.
CARLsim also requires CUDA Toolkit 5.0 and up. For CUDA installation instructrions for your
platform, please navigate to the NVIDIA <a href="https://developer.nvidia.com/cuda-zone">CUDA Zone</a>.
The rest of the chapter assumes you have successfully installed CUDA and have the
appropriate hardware.


\subsection ch1s1s1_os 1.1.1 Supported OS's
CARLsim has been tested on the following platforms:
- Windows 7
- Ubuntu 12.04
- Ubuntu 12.10
- Ubuntu 13.04
- Ubuntu 13.10
- Ubuntu 14.04
- Arch Linux
- CentOS 6

\subsection ch1s1s2_os 1.1.2 Source Directory Layout
Below is the directory layout of the CARLsim source code. The <tt>carlsim</tt> folder contains
the source code for carlsim. The sub-folders are key components to the CARLsim simulation library.
The <tt>doc</tt> folder contains doxygen-related files and the generated documentation. The
<tt>examples</tt> folder contains example code for a number of CARLsim examples. The
<tt>projects</tt> folder contains a template for writing your first CARLsim program. Users will
start here when they begin writing their first program. The <tt>tools</tt> directory contains a
number of CARLsim plugins that may be useful to users such as parameter tuning frameworks, MATLAB
scripts, spike generators, and tools for visual stimuli. Finally, the <tt>tutorial</tt> directory
contains the source code documentation for generating the tutorials.

\code
├── carlsim
│   ├── connection_monitor
│   ├── group_monitor
│   ├── interface
│   ├── kernel
│   ├── server
│   ├── spike_monitor
│   └── test
├── doc
│   └── html
├── examples
│   ├── colorblind
│   ├── colorcycle
│   ├── common
│   ├── dastdp
│   ├── istdp
│   ├── multiGPU
│   ├── orientation
│   ├── random
│   ├── spikeInfo
│   ├── tuneFiringRatesECJ
│   └── v1MTLIP
├── projects
│   └── hello_world
├── tools
│   ├── ecj_pti
│   ├── eo_pti
│   ├── offline_analysis_toolbox
│   ├── simple_weight_tuner
│   ├── spike_generators
│   └── visual_stimulus
└── tutorial
    ├── 10_ecj
    ├── 11_regression_suite
    ├── 12_advanced_topics
    ├── 13_example_networks
    ├── 1_getting_started
    ├── 2_basics
    ├── 3_neurons_synapses_groups
    ├── 4_connections
    ├── 5_synaptic_plasticity
    ├── 6_input
    ├── 7_monitoring
    ├── 8_saving_and_loading
    └── 9_visualization
\endcode

\since v3.0

\section ch1s2_installation 1.2 Installation
\author Kristofor D. Carlson

To install CARLsim, first download and unzip the zip file from our
<a href="http://www.socsci.uci.edu/~jkrichma/CARLsim/index.html"> website </a>. The
installation instructrions differ depending on your OS, so please reference the
appropriate subsection.

\subsection ch1s2s1_linux 1.2.1 Linux

Instructions for Linux installation assume you are using the Bash shell. Enter the unzipped
CARLsim directory. This directory will be referred to as the 'CARLsim root
directory' for the remainder of the install instructions. CARLsim users next have to set
installation specific variables such as information about GPU devices, CUDA Toolkit version, and
desired installation location.

The desired installation location of the CARLsim library is specified with the
<tt>CARLSIM_LIB_DIR</tt> variable. The major and minor compute capability numbers of your
CUDA-capable GPU device must be specified by setting the <tt>CUDA_MAJOR_NUM</tt> and
<tt>CUDA_MINOR_NUM</tt> variables. Next <tt>CUDA_INSTALL_PATH</tt> variable must be set. This
variable points to where CUDA is installed. Finally, the CUDA Toolkit version must be set with
the <tt>CARLSIM_CUDAVER</tt> variable. <tt>CARLSIM_FASTMATH</tt>, <tt>CARLSIM_CUOPTLEVEL</tt>, and
<tt>CARLSIM_DEBUG</tt> are optional settings. These settings affect the degree of fastmath
optimization (off by default), the degree of CUDA optimization (off by default), and whether or
not to include debugging information (off by default).

The easiest way to set these environment variables is to set them in your .bashrc file. The code
snippet below shows the lines to be added to the end of your .bashrc file. If the variables are
not defined in the .bashrc file, the values defined in the <tt>user.mk</tt> file will be used.

\code
# set CARLsim variables
export CARLSIM_CUDAVER=6
export CUDA_MAJOR_NUM=3
export CUDA_MINOR_NUM=5
export CARLSIM_SRC_DIR=~/Project/CARLsim
\endcode

To make sure these settings go into effect, you can either type: \code source ~/.bashrc \endcode or
close the shell and open another one. To find the CUDA Toolkit version you are using you can type:

\code nvcc --version \endcode

You need only input the major number of the toolkit version
(e.g. 6 for 6.5). To find compute capability of your GPU device can be found by running:

\code deviceQuery \endcode

which can usually be found in the following directory (for a 64-bit Linux distribution):

\code <cuda_installation_directory>/cuda/samples/bin/x86_64/linux/release \endcode


An alternative way to set the required environment variable is to edit the <tt>user.mk</tt> file
found in the CARLsim root directory. The '=?' sign in the user.mk file indicates the value the
variable will be assigned if it is not already defined. Therefore, the environment variables you
define in your .bashrc file will overide these values. This is shown in the code snippet below
of the <tt>user.mk</tt> file.

\code
#------------------------------------------------------------------------------
# USER-MODIFIABLE COMPONENT OF MAKEFILE
#
# Note: all paths should be absolute (start with /)
#------------------------------------------------------------------------------
# desired installation path of libcarlsim and headers
CARLSIM_LIB_DIR ?= /opt/CARL/CARLsim

# cuda capability major version number for GPU device
CUDA_MAJOR_NUM ?= 2
# cuda capability minor version number for GPU device
CUDA_MINOR_NUM ?= 0
# cuda toolkit version (major number only)
CARLSIM_CUDAVER ?= 5

# CUDA Installation location. If your CUDA installation is not /usr/local/cuda,
# please set CUDA_INSTALL_PATH to point to the correct location or set it as
# an environment variable.
CUDA_INSTALL_PATH ?= /usr/local/cuda

# $(OPT_LEVEL): set to 1, 2, or 3 if you want to use optimization.  Default: 0.
# $(DEBUG_INFO): set to 1 to include debug info, set to 0 to not include
# debugging info.  Default: 0.
CARLSIM_FASTMATH ?= 0
CARLSIM_CUOPTLEVEL ?= 0
CARLSIM_DEBUG ?= 0
\endcode

After the environment variables have been set, CARLsim can be compiled and installed. To compile
and install the CARLsim library, type:

\code
make && sudo make install
\endcode

This is will install the CARLsim library in the location pointed to by <tt>CARLSIM_LIB_DIR</tt>.
CARLsim comes with an optional automated parameter tuning framework. For more information about
how to install the framework please see \ref ch10_ecj. Additionally, CARLsim now comes with a
regression suite that uses <a href="https://code.google.com/p/googletest/">googletest</a>.
For more information on how to use the regression suite, please see \ref ch11_regression_suite.

\since v3.0

\subsection ch1s2s2_windows 1.2.2 Windows
\TODO TS or SL

\warning Warnings are overrated.
\see \ref ch10_ecj
\see \ref ch11_regression_suite

\section ch1s3_configuration 1.3 Configuration
\author Kristofor D. Carlson

This section discusses further configuration options with the user.mk file.


\subsection ch1s3s1_linux_config 1.3.1 Linux Configuration
\subsection ch1s3s1_windows_config 1.3.1 Windows Configuration

\since v3.0

\section ch1s4_generating_documentation 1.4 Generating Documentation
\author Kristofor D. Carlson


\section ch1s5_project_workflow 1.5 Project Workflow

\TODO KDC
How to get started with your project. Project template, maybe user.mk.

\TODO Kristofor
Makefile talk

\since v3.0

*/
